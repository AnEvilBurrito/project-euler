# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

### CODE 
# This question requires generation of Fibonacci numbers 

N = 4000000
evenFib = []

# base case 

t1 = 1
t2 = 2 
evenFib.append(t2)
 
while t2 < N:

    prev_t2 = t2 
    t2 = t1 + t2 
    t1 = prev_t2

    if t2 % 2 == 0 and t2 < N: 
        evenFib.append(t2)

print(sum(evenFib))

# time complexity: O(N) approx. 
# space complexity: O(N) approx. since storage of fibs 
# code length: 12, this can be improved (maybe using other languages too!)
